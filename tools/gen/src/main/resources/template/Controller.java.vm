package ${package}.controller;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import ${package}.service.${project}.${className}Service;
import ${package}.view.${project}.response.SysResult;
import ${package}.model.${project}.${className};
import ${req}.${className}ReqVO;
import ${resp}.${className}RespVO;

import java.util.List;

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Api("${comments}")
@RestController
@RequestMapping("/admin/${pathName}")
@Slf4j
public class ${className}Controller{

	@Autowired
	private ${className}Service ${classname}Service;

	@PostMapping("/getList")
	@ApiOperation(value = "列表")
	public SysResult<List<${className}RespVO>> list(@RequestBody ${className}ReqVO ${classname}ReqVO) {
		if(0 != ${classname}ReqVO.getPage() && 0 != ${classname}ReqVO.getLimit()){
			int page = (${classname}ReqVO.getPage()-1) * ${classname}ReqVO.getLimit();
				${classname}ReqVO.setPage(page);
		}
		SysResult<List<${className}RespVO>> result = new SysResult<>();
		List<${className}RespVO> ${classname}RespVOS = ${classname}Service.listByReq(${classname}ReqVO);
		int count = ${classname}Service.countByReq(${classname}ReqVO);
		return result.successOK(sysMenuRespVOS,count);
	}

	@GetMapping("/{id}")
	@ApiOperation(value = "根据id获取")
	public ${className} get(@PathVariable Integer id) {
		return ${classname}Service.queryById(id);
	}

	@PostMapping("/save")
	@ApiOperation(value = "保存")
	public ${className} save(@RequestBody ${className} ${classname}){
		${classname}Service.save(${classname});
		return ${classname};
	}

	@PutMapping("/update")
	@ApiOperation(value = "修改")
	public ${className} update(@RequestBody ${className} ${classname}) {
			${classname}Service.update(${classname});
		return ${classname};
	}

	@DeleteMapping("/delete/{id}")
	@ApiOperation(value = "删除")
	public void delete(@PathVariable Integer id) {
			${classname}Service.delete(id);
	}

}
